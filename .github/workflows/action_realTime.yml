name: Run real-time

permissions:
  contents: write

on:
  schedule:
    - cron: "*/15 * * * *"
    # De 04:05 a 17:50 hora Per√∫ (UTC‚Äì5) cada 15 minutos
    #- cron: "5 9-22 * * *"   # 04:05, 05:05, ‚Ä¶, 17:05 Per√∫
    #- cron: "20 9-22 * * *"  # 04:20, 05:20, ‚Ä¶, 17:20 Per√∫
    #- cron: "35 9-22 * * *"  # 04:35, 05:35, ‚Ä¶, 17:35 Per√∫
    #- cron: "50 9-22 * * *"  # 04:50, 05:50, ‚Ä¶, 17:50 Per√∫
  workflow_dispatch:      # Para ejecutarlo manualmente

jobs:
  real-time:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0 
          ref: main

      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Instalar dependencias y run real-time
        shell: bash -l {0}
        run: |
          conda install -y pip papermill ipykernel pandas numpy scikit-learn yfinance
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p data
          papermill downLoadDataRealtimeAlpha.ipynb downLoadDataRealtimeAlpha.ipynb_out.ipynb -k python3
      
      - name: Commit y push de archivos actualizados
        if: ${{ always() }}
        shell: bash
        run: |
          git config user.name "kaliinversionesyservicios"
          git config user.email "kaliinversionesyservicios@gmail.com"
          git add .
          git diff --cached --quiet || git commit -m "üîÑ Actualiza datos en dataxd y dataxh"
          git push origin main
   
  run_notebooks:
    needs: real-time
    runs-on: ubuntu-latest
    strategy:
      matrix:
        notebook: [BreakOut_IndicatorRT.ipynb, pisoFuerteRT.ipynb, detectCanalBajistaAlcista.ipynb]
    steps:
      - name: Clonar repositorio con datos ya actualizados
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: main
        
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Instalar dependencias y ejecutar notebook ${{ matrix.notebook }}
        shell: bash -l {0}
        run: |
          conda install -y pip papermill ipykernel pandas numpy scikit-learn yfinance
          pip install backtesting
          python -m ipykernel install --user --name python3

      - name: Mostrar diff de cambios
        shell: bash
        run: |
          echo "=== git status ==="
          git status
          echo
          echo "=== git diff --stat ==="
          git diff --stat
          echo
          echo "=== git diff completo (l√≠neas removidas [+] y a√±adidas [-]) ==="
          git diff

      - name: Commit & Push outputs
        if: success()
        shell: bash
        run: |
          git config user.name  "kaliinversionesyservicios"
          git config user.email "kaliinversionesyservicios@gmail.com"
          git add .
          git diff --cached --quiet && echo "‚ö†Ô∏è No hay cambios para commitear." && exit 0
          git commit -m "üîÑ Resultados ${{ matrix.notebook }}"
          for intento in {1..5}; do
            git pull --rebase --autostash && break
            echo "Reintento $intento‚Ä¶"
            sleep 3
          done
          git push origin main