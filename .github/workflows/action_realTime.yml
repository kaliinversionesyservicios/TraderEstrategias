name: Run Real Time Data

on:
  schedule:
    - cron: "*/15 * * * *"  
  workflow_dispatch:      # Para ejecutarlo manualmente

jobs:
  real_time:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      # 3. Ejecutar el notebook de datos hist√≥ricos
      - name: Instalar dependencias y run Real Time 
        shell: bash -l {0}
        run: |
          conda install -y pip papermill ipykernel pandas numpy scikit-learn yfinance
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill downLoadDataRealtimeAlpha.ipynb output/downLoadDataRealtimeAlpha.ipynb -k python3
      
      - uses: actions/upload-artifact@v4
        with:
          name: downLoadDataRealtimeAlpha
          path: output/downLoadDataRealtimeAlpha.ipynb
        
      - name: Upload dataxd.txt
        uses: actions/upload-artifact@v4
        with:
          name: realtime-data-xd
          path: data/dataxd.txt

      - name: Upload dataxh.txt
        uses: actions/upload-artifact@v4
        with:
          name: realtime-data-xh
          path: data/dataxh.txt

  pm40:
    needs: real_time
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Install depedencias y Ejecutar Promedio Movil
        shell: bash -l {0}
        run: |
          conda install -y papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill PM40_PromedioMovil40.ipynb output/PM40_PromedioMovil40.ipynb -k python3

      - uses: actions/upload-artifact@v4
        with:
          name: PM40_PromedioMovil40
          path: output/PM40_PromedioMovil40.ipynb

  rupCanalResistencia:
    needs: real_time
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Install depedencias y Ejecutar Ruptura Canal Resistencia
        shell: bash -l {0}
        run: |
          conda install -y papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill BreakOut_Indicator.ipynb output/BreakOut_Indicator.ipynb -k python3

      - uses: actions/upload-artifact@v4
        with:
          name: BreakOut_Indicator
          path: output/BreakOut_Indicator.ipynb

  cncf:
    needs: real_time
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Install depedencias y Ejecutar Caida Normal Caida Fuerte
        shell: bash -l {0}
        run: |
          conda install -y papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill CNCF_CaidaNormalCaidaFuerte.ipynb output/CNCF_CaidaNormalCaidaFuerte.ipynb -k python3

      - uses: actions/upload-artifact@v4
        with:
          name: CNCF_CaidaNormalCaidaFuerte
          path: output/CNCF_CaidaNormalCaidaFuerte.ipynb

  gapAlza:
    needs: real_time
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Install depedencias y run Gap Alza
        shell: bash -l {0}
        run: |
          conda install -y papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill PrimerGapAlza.ipynb output/PrimerGapAlza.ipynb -k python3

      - uses: actions/upload-artifact@v4
        with:
          name: PrimerGapAlza
          path: output/PrimerGapAlza.ipynb

  pisoFuerte:
    needs: real_time
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Install depedencias y run Piso Fuerte
        shell: bash -l {0}
        run: |
          conda install -y papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill pisoFuerte.ipynb output/pisoFuerte.ipynb -k python3

      - uses: actions/upload-artifact@v4
        with:
          name: pisoFuerte
          path: output/pisoFuerte.ipynb

  breakOut_Alcista:
    needs: real_time
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0 
          ref: main

      # 2. Configurar Miniconda e instalar dependencias
      - name: Configurar Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-name: myenv
          python-version: '3.10'
          channels: conda-forge

      - name: Install depedencias y run BreakOut_Alcista
        shell: bash -l {0}
        run: |
          conda install -y papermill ipykernel pandas numpy scikit-learn yfinance ta-lib
          pip install backtesting
          python -m ipykernel install --user --name python3
          mkdir -p output
          papermill BreakOut_alcista.ipynb output/BreakOut_alcista.ipynb -k python3

      - uses: actions/upload-artifact@v4
        with:
          name: BreakOut_alcista
          path: output/BreakOut_alcista.ipynb

  publish:
    name: Publicar resultados finales
    needs:
      - real_time
      - pm40
      - rupCanalResistencia
      - cncf
      - gapAlza
      - pisoFuerte
      - breakOut_Alcista
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_ACTION }}
          fetch-depth: 0

      - name: Configurar Git
        run: |
          git config user.email "kaliinversionesyservicios@gmail.com"
          git config user.name "kaliinversionesyservicios"

      - name: Descargar artifacts
        uses: actions/download-artifact@v4
        with:
          path: output
        
      - name: Descargar dataxd.txt
        uses: actions/download-artifact@v4
        with:
          name: realtime-data-xd
          path: data

      - name: Descargar dataxh.txt
        uses: actions/download-artifact@v4
        with:
          name: realtime-data-xh
          path: data

      - name: Mover archivos al root del repo
        run:  cp -R output/. .

      - name: Commit y push
        run: |
          git add *.ipynb data/dataxd.txt data/dataxh.txt
          git commit -m "Update todos los notebooks" || echo "No changes"
          git pull --rebase origin main
          git push origin HEAD:main






